# --- Fetch single geom type from DB using bounding box as clip patternfrom PostGISHelpers import *from WebOSM import *from region import *Wustermark = Region("Wustermark", boundary=(    12.871817013021891,    52.50091209200498,    13.018814242671711,    52.578008093778124))query_features = {'relation': 'brandenburg_polygon',                  'select_cols': ['osm_id', 'amenity'],                  'where_cond': "building is not NULL AND amenity is not NULL",                  'SRID': 4326}wustermark_buildings = OSMPolygons(name="Wustermark buildings",                                   region=Wustermark)wustermark_buildings.create_where_query(**query_features)wustermark_buildings.fetch_geoms(source_db='postgres_andi@localhost:5432/osm')# wustermark_buildings.plot_view()# wustermark_buildings.print_results()# wustermark_buildings.export2shp(#     '/Users/blubber/Documents/TEMP/wustermark_buildings.shp')# --- Fetch single geom type from DB using Shapefile as clip patternfrom PostGISHelpers import *from WebOSM import *from region import *Wustermark = Region("Wustermark",                    boundary='/Users/blubber/Documents/TEMP/wustermark_extend.shp')Wustermark_box = Region("Wustermark", boundary=(    12.871817013021891,    52.50091209200498,    13.018814242671711,    52.578008093778124))query_features = {'relation': 'brandenburg_polygon',                  'select_cols': ['osm_id', 'amenity'],                  'where_cond': "building is not NULL AND amenity is not NULL",                  'SRID': 4326}wustermark_buildings = OSMPolygons(name="Wustermark buildings",                                   region=Wustermark)wustermark_buildings.create_where_query(**query_features)wustermark_buildings.fetch_geoms(source_db='postgres_andi@localhost:5432/osm')wustermark_buildings.plot_view()wustermark_buildings.print_results()wustermark_buildings.export2shp(    '/Users/blubber/Documents/TEMP/wustermark_buildings.shp')# --- Fetch single geom type from full DB extentfrom PostGISHelpers import *from WebOSM import *from region import *Brandenburg = Region()query_features = {'relation': 'brandenburg_polygon',                  'select_cols': ['osm_id', 'amenity', 'name'],                  'where_cond': "building is not NULL AND amenity is not NULL",                  'SRID': 4326}brandenburg_buildings = OSMPolygons(name="Brandenburg buildings",                                    region=Brandenburg)brandenburg_buildings.create_where_query(**query_features)brandenburg_buildings.fetch_geoms(source_db='postgres_andi@localhost:5432/osm')brandenburg_buildings.plot_view()brandenburg_buildings.print_results()brandenburg_buildings.export2shp(    '/Users/blubber/Documents/TEMP/brandenburg_buildings.shp')# --- Fetch single geom type from DB using internal table -> try on reiners_db due to# permission problems on local osm DBfrom PostGISHelpers import *from WebOSM import *from region import *Wustermark = Region(name="Wustermark", boundary='public.wustermark')query_features = {'relation': 'brandenburg_polygon',                  'select_cols': ['osm_id', 'amenity', 'name'],                  'where_cond': "building is not NULL AND amenity is not NULL",                  'SRID': 4326}brandenburg_buildings = OSMPolygons(name="Brandenburg buildings",                                    region=Wustermark)brandenburg_buildings.create_where_query(**query_features)brandenburg_buildings.fetch_geoms(source_db='postgres_andi@localhost:5432/osm')# brandenburg_buildings.print_results()# brandenburg_buildings.export2shp(#     '/Users/blubber/Documents/TEMP/wustermark_buildings.shp')### Fetch all power data from complete OSM data set (Polygon, Line, Point)# at oncefrom PostGISHelpers import *from WebOSM import *from region import *Brandenburg = Region(name="Brandenburg")network = OSMCollection(name="Brandenburg Stromnetz", region=Brandenburg, points=False)network.create_collection_query(relation_prefix='brandenburg',                                select_cols=['osm_id', 'name', 'power'],                                where_cond="power is not NULL")network.fetch_OSM_collection(source_db='postgres_andi@localhost:5432/osm')network.plot_view(el_limit=5000)network.Lines.plot_view(el_limit=15000)